// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/CSUNetSec/netsec-protobufs/protocol/bgp/bgp.proto

package bgp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/CSUNetSec/netsec-protobufs/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// maximal field value = 13
// https://www.iana.org/assignments/bgp-parameters/bgp-parameters.xhtml#bgp-parameters-2
// non deprecated as of 01/2018
type BGPUpdate_Attributes_Type int32

const (
	BGPUpdate_Attributes_UNKNOWN                                  BGPUpdate_Attributes_Type = 0
	BGPUpdate_Attributes_ORIGIN                                   BGPUpdate_Attributes_Type = 1
	BGPUpdate_Attributes_AS_PATH                                  BGPUpdate_Attributes_Type = 2
	BGPUpdate_Attributes_NEXT_HOP                                 BGPUpdate_Attributes_Type = 3
	BGPUpdate_Attributes_MULTI_EXIT                               BGPUpdate_Attributes_Type = 4
	BGPUpdate_Attributes_LOCAL_PREF                               BGPUpdate_Attributes_Type = 5
	BGPUpdate_Attributes_ATOMIC_AGGREGATE                         BGPUpdate_Attributes_Type = 6
	BGPUpdate_Attributes_AGGREGATOR                               BGPUpdate_Attributes_Type = 7
	BGPUpdate_Attributes_COMMUNITY                                BGPUpdate_Attributes_Type = 8
	BGPUpdate_Attributes_ORIGINATOR_ID                            BGPUpdate_Attributes_Type = 9
	BGPUpdate_Attributes_CLUSTER_LIST                             BGPUpdate_Attributes_Type = 10
	BGPUpdate_Attributes_MP_REACH_NLRI                            BGPUpdate_Attributes_Type = 14
	BGPUpdate_Attributes_MP_UNREACH_NLRI                          BGPUpdate_Attributes_Type = 15
	BGPUpdate_Attributes_EXTENDED_COMMUNITY                       BGPUpdate_Attributes_Type = 16
	BGPUpdate_Attributes_AS4_PATH                                 BGPUpdate_Attributes_Type = 17
	BGPUpdate_Attributes_AS4_AGGREGATOR                           BGPUpdate_Attributes_Type = 18
	BGPUpdate_Attributes_PMSI_TUNNEL                              BGPUpdate_Attributes_Type = 22
	BGPUpdate_Attributes_TUNNEL_ENCAPSULATION_ATTRIBUTE           BGPUpdate_Attributes_Type = 23
	BGPUpdate_Attributes_TRAFFIC_ENGINEERING                      BGPUpdate_Attributes_Type = 24
	BGPUpdate_Attributes_IPV6_ADDRESS_SPECIFIC_EXTENDED_COMMUNITY BGPUpdate_Attributes_Type = 25
	BGPUpdate_Attributes_AIGP                                     BGPUpdate_Attributes_Type = 26
	BGPUpdate_Attributes_PE_DISTINGUISHER_LABELS                  BGPUpdate_Attributes_Type = 27
	BGPUpdate_Attributes_BGP_LS_ATTRIBUTE                         BGPUpdate_Attributes_Type = 29
	BGPUpdate_Attributes_LARGE_COMMUNITY                          BGPUpdate_Attributes_Type = 32
	BGPUpdate_Attributes_BGPSEC_PATH                              BGPUpdate_Attributes_Type = 33
	BGPUpdate_Attributes_ATTR_SET                                 BGPUpdate_Attributes_Type = 128
)

var BGPUpdate_Attributes_Type_name = map[int32]string{
	0:   "UNKNOWN",
	1:   "ORIGIN",
	2:   "AS_PATH",
	3:   "NEXT_HOP",
	4:   "MULTI_EXIT",
	5:   "LOCAL_PREF",
	6:   "ATOMIC_AGGREGATE",
	7:   "AGGREGATOR",
	8:   "COMMUNITY",
	9:   "ORIGINATOR_ID",
	10:  "CLUSTER_LIST",
	14:  "MP_REACH_NLRI",
	15:  "MP_UNREACH_NLRI",
	16:  "EXTENDED_COMMUNITY",
	17:  "AS4_PATH",
	18:  "AS4_AGGREGATOR",
	22:  "PMSI_TUNNEL",
	23:  "TUNNEL_ENCAPSULATION_ATTRIBUTE",
	24:  "TRAFFIC_ENGINEERING",
	25:  "IPV6_ADDRESS_SPECIFIC_EXTENDED_COMMUNITY",
	26:  "AIGP",
	27:  "PE_DISTINGUISHER_LABELS",
	29:  "BGP_LS_ATTRIBUTE",
	32:  "LARGE_COMMUNITY",
	33:  "BGPSEC_PATH",
	128: "ATTR_SET",
}
var BGPUpdate_Attributes_Type_value = map[string]int32{
	"UNKNOWN":                        0,
	"ORIGIN":                         1,
	"AS_PATH":                        2,
	"NEXT_HOP":                       3,
	"MULTI_EXIT":                     4,
	"LOCAL_PREF":                     5,
	"ATOMIC_AGGREGATE":               6,
	"AGGREGATOR":                     7,
	"COMMUNITY":                      8,
	"ORIGINATOR_ID":                  9,
	"CLUSTER_LIST":                   10,
	"MP_REACH_NLRI":                  14,
	"MP_UNREACH_NLRI":                15,
	"EXTENDED_COMMUNITY":             16,
	"AS4_PATH":                       17,
	"AS4_AGGREGATOR":                 18,
	"PMSI_TUNNEL":                    22,
	"TUNNEL_ENCAPSULATION_ATTRIBUTE": 23,
	"TRAFFIC_ENGINEERING":            24,
	"IPV6_ADDRESS_SPECIFIC_EXTENDED_COMMUNITY": 25,
	"AIGP":                    26,
	"PE_DISTINGUISHER_LABELS": 27,
	"BGP_LS_ATTRIBUTE":        29,
	"LARGE_COMMUNITY":         32,
	"BGPSEC_PATH":             33,
	"ATTR_SET":                128,
}

func (x BGPUpdate_Attributes_Type) String() string {
	return proto.EnumName(BGPUpdate_Attributes_Type_name, int32(x))
}
func (BGPUpdate_Attributes_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{8, 5, 0}
}

type BGPUpdate_Attributes_Origin int32

const (
	BGPUpdate_Attributes_IGP BGPUpdate_Attributes_Origin = 0
	BGPUpdate_Attributes_EGP BGPUpdate_Attributes_Origin = 1
	BGPUpdate_Attributes_INC BGPUpdate_Attributes_Origin = 2
)

var BGPUpdate_Attributes_Origin_name = map[int32]string{
	0: "IGP",
	1: "EGP",
	2: "INC",
}
var BGPUpdate_Attributes_Origin_value = map[string]int32{
	"IGP": 0,
	"EGP": 1,
	"INC": 2,
}

func (x BGPUpdate_Attributes_Origin) String() string {
	return proto.EnumName(BGPUpdate_Attributes_Origin_name, int32(x))
}
func (BGPUpdate_Attributes_Origin) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{8, 5, 1}
}

type MrtMessage struct {
	Header               *MrtHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body                 *MrtBody   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MrtMessage) Reset()         { *m = MrtMessage{} }
func (m *MrtMessage) String() string { return proto.CompactTextString(m) }
func (*MrtMessage) ProtoMessage()    {}
func (*MrtMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{0}
}
func (m *MrtMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MrtMessage.Unmarshal(m, b)
}
func (m *MrtMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MrtMessage.Marshal(b, m, deterministic)
}
func (dst *MrtMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MrtMessage.Merge(dst, src)
}
func (m *MrtMessage) XXX_Size() int {
	return xxx_messageInfo_MrtMessage.Size(m)
}
func (m *MrtMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MrtMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MrtMessage proto.InternalMessageInfo

func (m *MrtMessage) GetHeader() *MrtHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MrtMessage) GetBody() *MrtBody {
	if m != nil {
		return m.Body
	}
	return nil
}

type MrtHeader struct {
	Timestamp            uint32   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type                 uint32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Subtype              uint32   `protobuf:"varint,3,opt,name=subtype,proto3" json:"subtype,omitempty"`
	Len                  uint32   `protobuf:"varint,4,opt,name=len,proto3" json:"len,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MrtHeader) Reset()         { *m = MrtHeader{} }
func (m *MrtHeader) String() string { return proto.CompactTextString(m) }
func (*MrtHeader) ProtoMessage()    {}
func (*MrtHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{1}
}
func (m *MrtHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MrtHeader.Unmarshal(m, b)
}
func (m *MrtHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MrtHeader.Marshal(b, m, deterministic)
}
func (dst *MrtHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MrtHeader.Merge(dst, src)
}
func (m *MrtHeader) XXX_Size() int {
	return xxx_messageInfo_MrtHeader.Size(m)
}
func (m *MrtHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_MrtHeader.DiscardUnknown(m)
}

var xxx_messageInfo_MrtHeader proto.InternalMessageInfo

func (m *MrtHeader) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MrtHeader) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MrtHeader) GetSubtype() uint32 {
	if m != nil {
		return m.Subtype
	}
	return 0
}

func (m *MrtHeader) GetLen() uint32 {
	if m != nil {
		return m.Len
	}
	return 0
}

type MrtBody struct {
	BGP4MPHeader         *BGP4MPHeader `protobuf:"bytes,1,opt,name=BGP4MPHeader,proto3" json:"BGP4MPHeader,omitempty"`
	BGPMessage           []byte        `protobuf:"bytes,2,opt,name=BGPMessage,proto3" json:"BGPMessage,omitempty"`
	Rib                  *RIB          `protobuf:"bytes,3,opt,name=rib,proto3" json:"rib,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MrtBody) Reset()         { *m = MrtBody{} }
func (m *MrtBody) String() string { return proto.CompactTextString(m) }
func (*MrtBody) ProtoMessage()    {}
func (*MrtBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{2}
}
func (m *MrtBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MrtBody.Unmarshal(m, b)
}
func (m *MrtBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MrtBody.Marshal(b, m, deterministic)
}
func (dst *MrtBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MrtBody.Merge(dst, src)
}
func (m *MrtBody) XXX_Size() int {
	return xxx_messageInfo_MrtBody.Size(m)
}
func (m *MrtBody) XXX_DiscardUnknown() {
	xxx_messageInfo_MrtBody.DiscardUnknown(m)
}

var xxx_messageInfo_MrtBody proto.InternalMessageInfo

func (m *MrtBody) GetBGP4MPHeader() *BGP4MPHeader {
	if m != nil {
		return m.BGP4MPHeader
	}
	return nil
}

func (m *MrtBody) GetBGPMessage() []byte {
	if m != nil {
		return m.BGPMessage
	}
	return nil
}

func (m *MrtBody) GetRib() *RIB {
	if m != nil {
		return m.Rib
	}
	return nil
}

type RIB struct {
	PeerEntry            []*PeerEntry `protobuf:"bytes,1,rep,name=peerEntry,proto3" json:"peerEntry,omitempty"`
	RouteEntry           []*RIBEntry  `protobuf:"bytes,2,rep,name=routeEntry,proto3" json:"routeEntry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RIB) Reset()         { *m = RIB{} }
func (m *RIB) String() string { return proto.CompactTextString(m) }
func (*RIB) ProtoMessage()    {}
func (*RIB) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{3}
}
func (m *RIB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RIB.Unmarshal(m, b)
}
func (m *RIB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RIB.Marshal(b, m, deterministic)
}
func (dst *RIB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RIB.Merge(dst, src)
}
func (m *RIB) XXX_Size() int {
	return xxx_messageInfo_RIB.Size(m)
}
func (m *RIB) XXX_DiscardUnknown() {
	xxx_messageInfo_RIB.DiscardUnknown(m)
}

var xxx_messageInfo_RIB proto.InternalMessageInfo

func (m *RIB) GetPeerEntry() []*PeerEntry {
	if m != nil {
		return m.PeerEntry
	}
	return nil
}

func (m *RIB) GetRouteEntry() []*RIBEntry {
	if m != nil {
		return m.RouteEntry
	}
	return nil
}

type PeerEntry struct {
	Peer_IP              *common.IPAddressWrapper `protobuf:"bytes,1,opt,name=peer_IP,json=peerIP,proto3" json:"peer_IP,omitempty"`
	PeerAs               uint32                   `protobuf:"varint,2,opt,name=peer_as,json=peerAs,proto3" json:"peer_as,omitempty"`
	PeerId               uint32                   `protobuf:"varint,3,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PeerEntry) Reset()         { *m = PeerEntry{} }
func (m *PeerEntry) String() string { return proto.CompactTextString(m) }
func (*PeerEntry) ProtoMessage()    {}
func (*PeerEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{4}
}
func (m *PeerEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerEntry.Unmarshal(m, b)
}
func (m *PeerEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerEntry.Marshal(b, m, deterministic)
}
func (dst *PeerEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerEntry.Merge(dst, src)
}
func (m *PeerEntry) XXX_Size() int {
	return xxx_messageInfo_PeerEntry.Size(m)
}
func (m *PeerEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerEntry.DiscardUnknown(m)
}

var xxx_messageInfo_PeerEntry proto.InternalMessageInfo

func (m *PeerEntry) GetPeer_IP() *common.IPAddressWrapper {
	if m != nil {
		return m.Peer_IP
	}
	return nil
}

func (m *PeerEntry) GetPeerAs() uint32 {
	if m != nil {
		return m.PeerAs
	}
	return 0
}

func (m *PeerEntry) GetPeerId() uint32 {
	if m != nil {
		return m.PeerId
	}
	return 0
}

type RIBEntry struct {
	Prefix               *common.PrefixWrapper `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Timestamp            uint32                `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PeerIndex            uint32                `protobuf:"varint,3,opt,name=peer_index,json=peerIndex,proto3" json:"peer_index,omitempty"`
	Attrs                *BGPUpdate_Attributes `protobuf:"bytes,4,opt,name=attrs,proto3" json:"attrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RIBEntry) Reset()         { *m = RIBEntry{} }
func (m *RIBEntry) String() string { return proto.CompactTextString(m) }
func (*RIBEntry) ProtoMessage()    {}
func (*RIBEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{5}
}
func (m *RIBEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RIBEntry.Unmarshal(m, b)
}
func (m *RIBEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RIBEntry.Marshal(b, m, deterministic)
}
func (dst *RIBEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RIBEntry.Merge(dst, src)
}
func (m *RIBEntry) XXX_Size() int {
	return xxx_messageInfo_RIBEntry.Size(m)
}
func (m *RIBEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_RIBEntry.DiscardUnknown(m)
}

var xxx_messageInfo_RIBEntry proto.InternalMessageInfo

func (m *RIBEntry) GetPrefix() *common.PrefixWrapper {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *RIBEntry) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *RIBEntry) GetPeerIndex() uint32 {
	if m != nil {
		return m.PeerIndex
	}
	return 0
}

func (m *RIBEntry) GetAttrs() *BGPUpdate_Attributes {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type BGP4MPHeader struct {
	PeerAs               uint32                   `protobuf:"varint,1,opt,name=peer_as,json=peerAs,proto3" json:"peer_as,omitempty"`
	LocalAs              uint32                   `protobuf:"varint,2,opt,name=local_as,json=localAs,proto3" json:"local_as,omitempty"`
	InterfaceIndex       uint32                   `protobuf:"varint,3,opt,name=interface_index,json=interfaceIndex,proto3" json:"interface_index,omitempty"`
	AddressFamily        uint32                   `protobuf:"varint,4,opt,name=address_family,json=addressFamily,proto3" json:"address_family,omitempty"`
	Peer_IP              *common.IPAddressWrapper `protobuf:"bytes,5,opt,name=peer_IP,json=peerIP,proto3" json:"peer_IP,omitempty"`
	Local_IP             *common.IPAddressWrapper `protobuf:"bytes,6,opt,name=local_IP,json=localIP,proto3" json:"local_IP,omitempty"`
	IsAs4                bool                     `protobuf:"varint,7,opt,name=is_as4,json=isAs4,proto3" json:"is_as4,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BGP4MPHeader) Reset()         { *m = BGP4MPHeader{} }
func (m *BGP4MPHeader) String() string { return proto.CompactTextString(m) }
func (*BGP4MPHeader) ProtoMessage()    {}
func (*BGP4MPHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{6}
}
func (m *BGP4MPHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BGP4MPHeader.Unmarshal(m, b)
}
func (m *BGP4MPHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BGP4MPHeader.Marshal(b, m, deterministic)
}
func (dst *BGP4MPHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGP4MPHeader.Merge(dst, src)
}
func (m *BGP4MPHeader) XXX_Size() int {
	return xxx_messageInfo_BGP4MPHeader.Size(m)
}
func (m *BGP4MPHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BGP4MPHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BGP4MPHeader proto.InternalMessageInfo

func (m *BGP4MPHeader) GetPeerAs() uint32 {
	if m != nil {
		return m.PeerAs
	}
	return 0
}

func (m *BGP4MPHeader) GetLocalAs() uint32 {
	if m != nil {
		return m.LocalAs
	}
	return 0
}

func (m *BGP4MPHeader) GetInterfaceIndex() uint32 {
	if m != nil {
		return m.InterfaceIndex
	}
	return 0
}

func (m *BGP4MPHeader) GetAddressFamily() uint32 {
	if m != nil {
		return m.AddressFamily
	}
	return 0
}

func (m *BGP4MPHeader) GetPeer_IP() *common.IPAddressWrapper {
	if m != nil {
		return m.Peer_IP
	}
	return nil
}

func (m *BGP4MPHeader) GetLocal_IP() *common.IPAddressWrapper {
	if m != nil {
		return m.Local_IP
	}
	return nil
}

func (m *BGP4MPHeader) GetIsAs4() bool {
	if m != nil {
		return m.IsAs4
	}
	return false
}

type BGPHeader struct {
	// 16 bytes marker
	Marker []byte `protobuf:"bytes,1,opt,name=marker,proto3" json:"marker,omitempty"`
	// 2 byte length of BGP msg RFC says should be less than 4096
	Length uint32 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	// uint8 msg type
	Type                 uint32   `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BGPHeader) Reset()         { *m = BGPHeader{} }
func (m *BGPHeader) String() string { return proto.CompactTextString(m) }
func (*BGPHeader) ProtoMessage()    {}
func (*BGPHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{7}
}
func (m *BGPHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BGPHeader.Unmarshal(m, b)
}
func (m *BGPHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BGPHeader.Marshal(b, m, deterministic)
}
func (dst *BGPHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGPHeader.Merge(dst, src)
}
func (m *BGPHeader) XXX_Size() int {
	return xxx_messageInfo_BGPHeader.Size(m)
}
func (m *BGPHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BGPHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BGPHeader proto.InternalMessageInfo

func (m *BGPHeader) GetMarker() []byte {
	if m != nil {
		return m.Marker
	}
	return nil
}

func (m *BGPHeader) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *BGPHeader) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type BGPUpdate struct {
	// a message can contain only Advertised routes,
	// only withdrawn or both.
	AdvertisedRoutes     *BGPUpdate_AdvertisedRoutes `protobuf:"bytes,1,opt,name=advertised_routes,json=advertisedRoutes,proto3" json:"advertised_routes,omitempty"`
	WithdrawnRoutes      *BGPUpdate_WithdrawnRoutes  `protobuf:"bytes,2,opt,name=withdrawn_routes,json=withdrawnRoutes,proto3" json:"withdrawn_routes,omitempty"`
	Attrs                *BGPUpdate_Attributes       `protobuf:"bytes,3,opt,name=attrs,proto3" json:"attrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *BGPUpdate) Reset()         { *m = BGPUpdate{} }
func (m *BGPUpdate) String() string { return proto.CompactTextString(m) }
func (*BGPUpdate) ProtoMessage()    {}
func (*BGPUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{8}
}
func (m *BGPUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BGPUpdate.Unmarshal(m, b)
}
func (m *BGPUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BGPUpdate.Marshal(b, m, deterministic)
}
func (dst *BGPUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGPUpdate.Merge(dst, src)
}
func (m *BGPUpdate) XXX_Size() int {
	return xxx_messageInfo_BGPUpdate.Size(m)
}
func (m *BGPUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_BGPUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_BGPUpdate proto.InternalMessageInfo

func (m *BGPUpdate) GetAdvertisedRoutes() *BGPUpdate_AdvertisedRoutes {
	if m != nil {
		return m.AdvertisedRoutes
	}
	return nil
}

func (m *BGPUpdate) GetWithdrawnRoutes() *BGPUpdate_WithdrawnRoutes {
	if m != nil {
		return m.WithdrawnRoutes
	}
	return nil
}

func (m *BGPUpdate) GetAttrs() *BGPUpdate_Attributes {
	if m != nil {
		return m.Attrs
	}
	return nil
}

// an AS-path is a sequence of either subsequences of AS-Paths (lists)
// or Sets of ASes. We call either of those, segments.
type BGPUpdate_ASPathSegment struct {
	AsSet                []uint32 `protobuf:"varint,1,rep,packed,name=as_set,json=asSet,proto3" json:"as_set,omitempty"`
	AsSeq                []uint32 `protobuf:"varint,2,rep,packed,name=as_seq,json=asSeq,proto3" json:"as_seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BGPUpdate_ASPathSegment) Reset()         { *m = BGPUpdate_ASPathSegment{} }
func (m *BGPUpdate_ASPathSegment) String() string { return proto.CompactTextString(m) }
func (*BGPUpdate_ASPathSegment) ProtoMessage()    {}
func (*BGPUpdate_ASPathSegment) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{8, 0}
}
func (m *BGPUpdate_ASPathSegment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BGPUpdate_ASPathSegment.Unmarshal(m, b)
}
func (m *BGPUpdate_ASPathSegment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BGPUpdate_ASPathSegment.Marshal(b, m, deterministic)
}
func (dst *BGPUpdate_ASPathSegment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGPUpdate_ASPathSegment.Merge(dst, src)
}
func (m *BGPUpdate_ASPathSegment) XXX_Size() int {
	return xxx_messageInfo_BGPUpdate_ASPathSegment.Size(m)
}
func (m *BGPUpdate_ASPathSegment) XXX_DiscardUnknown() {
	xxx_messageInfo_BGPUpdate_ASPathSegment.DiscardUnknown(m)
}

var xxx_messageInfo_BGPUpdate_ASPathSegment proto.InternalMessageInfo

func (m *BGPUpdate_ASPathSegment) GetAsSet() []uint32 {
	if m != nil {
		return m.AsSet
	}
	return nil
}

func (m *BGPUpdate_ASPathSegment) GetAsSeq() []uint32 {
	if m != nil {
		return m.AsSeq
	}
	return nil
}

// if this is populated then all the attrs in it are RFC-mandatory,
// so required.
type BGPUpdate_AdvertisedRoutes struct {
	Prefixes             []*common.PrefixWrapper `protobuf:"bytes,1,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *BGPUpdate_AdvertisedRoutes) Reset()         { *m = BGPUpdate_AdvertisedRoutes{} }
func (m *BGPUpdate_AdvertisedRoutes) String() string { return proto.CompactTextString(m) }
func (*BGPUpdate_AdvertisedRoutes) ProtoMessage()    {}
func (*BGPUpdate_AdvertisedRoutes) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{8, 1}
}
func (m *BGPUpdate_AdvertisedRoutes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BGPUpdate_AdvertisedRoutes.Unmarshal(m, b)
}
func (m *BGPUpdate_AdvertisedRoutes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BGPUpdate_AdvertisedRoutes.Marshal(b, m, deterministic)
}
func (dst *BGPUpdate_AdvertisedRoutes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGPUpdate_AdvertisedRoutes.Merge(dst, src)
}
func (m *BGPUpdate_AdvertisedRoutes) XXX_Size() int {
	return xxx_messageInfo_BGPUpdate_AdvertisedRoutes.Size(m)
}
func (m *BGPUpdate_AdvertisedRoutes) XXX_DiscardUnknown() {
	xxx_messageInfo_BGPUpdate_AdvertisedRoutes.DiscardUnknown(m)
}

var xxx_messageInfo_BGPUpdate_AdvertisedRoutes proto.InternalMessageInfo

func (m *BGPUpdate_AdvertisedRoutes) GetPrefixes() []*common.PrefixWrapper {
	if m != nil {
		return m.Prefixes
	}
	return nil
}

type BGPUpdate_Aggregator struct {
	As                   uint32                   `protobuf:"varint,1,opt,name=as,proto3" json:"as,omitempty"`
	IP                   *common.IPAddressWrapper `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BGPUpdate_Aggregator) Reset()         { *m = BGPUpdate_Aggregator{} }
func (m *BGPUpdate_Aggregator) String() string { return proto.CompactTextString(m) }
func (*BGPUpdate_Aggregator) ProtoMessage()    {}
func (*BGPUpdate_Aggregator) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{8, 2}
}
func (m *BGPUpdate_Aggregator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BGPUpdate_Aggregator.Unmarshal(m, b)
}
func (m *BGPUpdate_Aggregator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BGPUpdate_Aggregator.Marshal(b, m, deterministic)
}
func (dst *BGPUpdate_Aggregator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGPUpdate_Aggregator.Merge(dst, src)
}
func (m *BGPUpdate_Aggregator) XXX_Size() int {
	return xxx_messageInfo_BGPUpdate_Aggregator.Size(m)
}
func (m *BGPUpdate_Aggregator) XXX_DiscardUnknown() {
	xxx_messageInfo_BGPUpdate_Aggregator.DiscardUnknown(m)
}

var xxx_messageInfo_BGPUpdate_Aggregator proto.InternalMessageInfo

func (m *BGPUpdate_Aggregator) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *BGPUpdate_Aggregator) GetIP() *common.IPAddressWrapper {
	if m != nil {
		return m.IP
	}
	return nil
}

type BGPUpdate_Community struct {
	// XXX we don't parse deeper into these attribute yet.
	// but we can store it for now.
	Community            []byte   `protobuf:"bytes,1,opt,name=community,proto3" json:"community,omitempty"`
	ExtendedCommunity    []byte   `protobuf:"bytes,2,opt,name=extended_community,json=extendedCommunity,proto3" json:"extended_community,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BGPUpdate_Community) Reset()         { *m = BGPUpdate_Community{} }
func (m *BGPUpdate_Community) String() string { return proto.CompactTextString(m) }
func (*BGPUpdate_Community) ProtoMessage()    {}
func (*BGPUpdate_Community) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{8, 3}
}
func (m *BGPUpdate_Community) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BGPUpdate_Community.Unmarshal(m, b)
}
func (m *BGPUpdate_Community) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BGPUpdate_Community.Marshal(b, m, deterministic)
}
func (dst *BGPUpdate_Community) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGPUpdate_Community.Merge(dst, src)
}
func (m *BGPUpdate_Community) XXX_Size() int {
	return xxx_messageInfo_BGPUpdate_Community.Size(m)
}
func (m *BGPUpdate_Community) XXX_DiscardUnknown() {
	xxx_messageInfo_BGPUpdate_Community.DiscardUnknown(m)
}

var xxx_messageInfo_BGPUpdate_Community proto.InternalMessageInfo

func (m *BGPUpdate_Community) GetCommunity() []byte {
	if m != nil {
		return m.Community
	}
	return nil
}

func (m *BGPUpdate_Community) GetExtendedCommunity() []byte {
	if m != nil {
		return m.ExtendedCommunity
	}
	return nil
}

type BGPUpdate_Communities struct {
	Communities          []*BGPUpdate_Community `protobuf:"bytes,1,rep,name=communities,proto3" json:"communities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BGPUpdate_Communities) Reset()         { *m = BGPUpdate_Communities{} }
func (m *BGPUpdate_Communities) String() string { return proto.CompactTextString(m) }
func (*BGPUpdate_Communities) ProtoMessage()    {}
func (*BGPUpdate_Communities) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{8, 4}
}
func (m *BGPUpdate_Communities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BGPUpdate_Communities.Unmarshal(m, b)
}
func (m *BGPUpdate_Communities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BGPUpdate_Communities.Marshal(b, m, deterministic)
}
func (dst *BGPUpdate_Communities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGPUpdate_Communities.Merge(dst, src)
}
func (m *BGPUpdate_Communities) XXX_Size() int {
	return xxx_messageInfo_BGPUpdate_Communities.Size(m)
}
func (m *BGPUpdate_Communities) XXX_DiscardUnknown() {
	xxx_messageInfo_BGPUpdate_Communities.DiscardUnknown(m)
}

var xxx_messageInfo_BGPUpdate_Communities proto.InternalMessageInfo

func (m *BGPUpdate_Communities) GetCommunities() []*BGPUpdate_Community {
	if m != nil {
		return m.Communities
	}
	return nil
}

type BGPUpdate_Attributes struct {
	OptionalBit          bool                        `protobuf:"varint,1,opt,name=optional_bit,json=optionalBit,proto3" json:"optional_bit,omitempty"`
	TransitiveBit        bool                        `protobuf:"varint,2,opt,name=transitive_bit,json=transitiveBit,proto3" json:"transitive_bit,omitempty"`
	PartialBit           bool                        `protobuf:"varint,3,opt,name=partial_bit,json=partialBit,proto3" json:"partial_bit,omitempty"`
	ExtendedBit          bool                        `protobuf:"varint,4,opt,name=extended_bit,json=extendedBit,proto3" json:"extended_bit,omitempty"`
	Origin               BGPUpdate_Attributes_Origin `protobuf:"varint,5,opt,name=origin,proto3,enum=bgp.BGPUpdate_Attributes_Origin" json:"origin,omitempty"`
	AsPath               []*BGPUpdate_ASPathSegment  `protobuf:"bytes,6,rep,name=as_path,json=asPath,proto3" json:"as_path,omitempty"`
	NextHop              *common.IPAddressWrapper    `protobuf:"bytes,7,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	MultiExit            uint32                      `protobuf:"varint,8,opt,name=multi_exit,json=multiExit,proto3" json:"multi_exit,omitempty"`
	LocalPref            uint32                      `protobuf:"varint,9,opt,name=local_pref,json=localPref,proto3" json:"local_pref,omitempty"`
	Aggregator           *BGPUpdate_Aggregator       `protobuf:"bytes,10,opt,name=aggregator,proto3" json:"aggregator,omitempty"`
	Communities          *BGPUpdate_Communities      `protobuf:"bytes,11,opt,name=communities,proto3" json:"communities,omitempty"`
	AtomicAggregate      bool                        `protobuf:"varint,12,opt,name=atomic_aggregate,json=atomicAggregate,proto3" json:"atomic_aggregate,omitempty"`
	Types                []BGPUpdate_Attributes_Type `protobuf:"varint,13,rep,packed,name=types,proto3,enum=bgp.BGPUpdate_Attributes_Type" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *BGPUpdate_Attributes) Reset()         { *m = BGPUpdate_Attributes{} }
func (m *BGPUpdate_Attributes) String() string { return proto.CompactTextString(m) }
func (*BGPUpdate_Attributes) ProtoMessage()    {}
func (*BGPUpdate_Attributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{8, 5}
}
func (m *BGPUpdate_Attributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BGPUpdate_Attributes.Unmarshal(m, b)
}
func (m *BGPUpdate_Attributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BGPUpdate_Attributes.Marshal(b, m, deterministic)
}
func (dst *BGPUpdate_Attributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGPUpdate_Attributes.Merge(dst, src)
}
func (m *BGPUpdate_Attributes) XXX_Size() int {
	return xxx_messageInfo_BGPUpdate_Attributes.Size(m)
}
func (m *BGPUpdate_Attributes) XXX_DiscardUnknown() {
	xxx_messageInfo_BGPUpdate_Attributes.DiscardUnknown(m)
}

var xxx_messageInfo_BGPUpdate_Attributes proto.InternalMessageInfo

func (m *BGPUpdate_Attributes) GetOptionalBit() bool {
	if m != nil {
		return m.OptionalBit
	}
	return false
}

func (m *BGPUpdate_Attributes) GetTransitiveBit() bool {
	if m != nil {
		return m.TransitiveBit
	}
	return false
}

func (m *BGPUpdate_Attributes) GetPartialBit() bool {
	if m != nil {
		return m.PartialBit
	}
	return false
}

func (m *BGPUpdate_Attributes) GetExtendedBit() bool {
	if m != nil {
		return m.ExtendedBit
	}
	return false
}

func (m *BGPUpdate_Attributes) GetOrigin() BGPUpdate_Attributes_Origin {
	if m != nil {
		return m.Origin
	}
	return BGPUpdate_Attributes_IGP
}

func (m *BGPUpdate_Attributes) GetAsPath() []*BGPUpdate_ASPathSegment {
	if m != nil {
		return m.AsPath
	}
	return nil
}

func (m *BGPUpdate_Attributes) GetNextHop() *common.IPAddressWrapper {
	if m != nil {
		return m.NextHop
	}
	return nil
}

func (m *BGPUpdate_Attributes) GetMultiExit() uint32 {
	if m != nil {
		return m.MultiExit
	}
	return 0
}

func (m *BGPUpdate_Attributes) GetLocalPref() uint32 {
	if m != nil {
		return m.LocalPref
	}
	return 0
}

func (m *BGPUpdate_Attributes) GetAggregator() *BGPUpdate_Aggregator {
	if m != nil {
		return m.Aggregator
	}
	return nil
}

func (m *BGPUpdate_Attributes) GetCommunities() *BGPUpdate_Communities {
	if m != nil {
		return m.Communities
	}
	return nil
}

func (m *BGPUpdate_Attributes) GetAtomicAggregate() bool {
	if m != nil {
		return m.AtomicAggregate
	}
	return false
}

func (m *BGPUpdate_Attributes) GetTypes() []BGPUpdate_Attributes_Type {
	if m != nil {
		return m.Types
	}
	return nil
}

type BGPUpdate_WithdrawnRoutes struct {
	Prefixes             []*common.PrefixWrapper `protobuf:"bytes,1,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *BGPUpdate_WithdrawnRoutes) Reset()         { *m = BGPUpdate_WithdrawnRoutes{} }
func (m *BGPUpdate_WithdrawnRoutes) String() string { return proto.CompactTextString(m) }
func (*BGPUpdate_WithdrawnRoutes) ProtoMessage()    {}
func (*BGPUpdate_WithdrawnRoutes) Descriptor() ([]byte, []int) {
	return fileDescriptor_bgp_1103258e00695737, []int{8, 6}
}
func (m *BGPUpdate_WithdrawnRoutes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BGPUpdate_WithdrawnRoutes.Unmarshal(m, b)
}
func (m *BGPUpdate_WithdrawnRoutes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BGPUpdate_WithdrawnRoutes.Marshal(b, m, deterministic)
}
func (dst *BGPUpdate_WithdrawnRoutes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGPUpdate_WithdrawnRoutes.Merge(dst, src)
}
func (m *BGPUpdate_WithdrawnRoutes) XXX_Size() int {
	return xxx_messageInfo_BGPUpdate_WithdrawnRoutes.Size(m)
}
func (m *BGPUpdate_WithdrawnRoutes) XXX_DiscardUnknown() {
	xxx_messageInfo_BGPUpdate_WithdrawnRoutes.DiscardUnknown(m)
}

var xxx_messageInfo_BGPUpdate_WithdrawnRoutes proto.InternalMessageInfo

func (m *BGPUpdate_WithdrawnRoutes) GetPrefixes() []*common.PrefixWrapper {
	if m != nil {
		return m.Prefixes
	}
	return nil
}

func init() {
	proto.RegisterType((*MrtMessage)(nil), "bgp.MrtMessage")
	proto.RegisterType((*MrtHeader)(nil), "bgp.MrtHeader")
	proto.RegisterType((*MrtBody)(nil), "bgp.MrtBody")
	proto.RegisterType((*RIB)(nil), "bgp.RIB")
	proto.RegisterType((*PeerEntry)(nil), "bgp.PeerEntry")
	proto.RegisterType((*RIBEntry)(nil), "bgp.RIBEntry")
	proto.RegisterType((*BGP4MPHeader)(nil), "bgp.BGP4MPHeader")
	proto.RegisterType((*BGPHeader)(nil), "bgp.BGPHeader")
	proto.RegisterType((*BGPUpdate)(nil), "bgp.BGPUpdate")
	proto.RegisterType((*BGPUpdate_ASPathSegment)(nil), "bgp.BGPUpdate.ASPathSegment")
	proto.RegisterType((*BGPUpdate_AdvertisedRoutes)(nil), "bgp.BGPUpdate.AdvertisedRoutes")
	proto.RegisterType((*BGPUpdate_Aggregator)(nil), "bgp.BGPUpdate.Aggregator")
	proto.RegisterType((*BGPUpdate_Community)(nil), "bgp.BGPUpdate.Community")
	proto.RegisterType((*BGPUpdate_Communities)(nil), "bgp.BGPUpdate.Communities")
	proto.RegisterType((*BGPUpdate_Attributes)(nil), "bgp.BGPUpdate.Attributes")
	proto.RegisterType((*BGPUpdate_WithdrawnRoutes)(nil), "bgp.BGPUpdate.WithdrawnRoutes")
	proto.RegisterEnum("bgp.BGPUpdate_Attributes_Type", BGPUpdate_Attributes_Type_name, BGPUpdate_Attributes_Type_value)
	proto.RegisterEnum("bgp.BGPUpdate_Attributes_Origin", BGPUpdate_Attributes_Origin_name, BGPUpdate_Attributes_Origin_value)
}

func init() {
	proto.RegisterFile("github.com/CSUNetSec/netsec-protobufs/protocol/bgp/bgp.proto", fileDescriptor_bgp_1103258e00695737)
}

var fileDescriptor_bgp_1103258e00695737 = []byte{
	// 1418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5b, 0x6f, 0xdb, 0x46,
	0x16, 0x8e, 0x2e, 0xd6, 0xe5, 0xe8, 0x62, 0x7a, 0xb2, 0x89, 0x19, 0xe5, 0xe6, 0x68, 0xb1, 0xbb,
	0x5e, 0x20, 0xb6, 0x11, 0xc7, 0x59, 0x6c, 0x16, 0xd9, 0x07, 0x4a, 0xa6, 0xe9, 0x41, 0x25, 0x8a,
	0x18, 0x52, 0x89, 0xfb, 0x34, 0xa0, 0xa4, 0xb1, 0x4c, 0x54, 0x22, 0x19, 0x72, 0x9c, 0xd8, 0x40,
	0x1f, 0xfa, 0x90, 0x3f, 0xd0, 0x87, 0xfe, 0x86, 0xfe, 0xcd, 0x62, 0x86, 0xa4, 0x6e, 0xa9, 0xdb,
	0xa0, 0x0f, 0x86, 0x79, 0xbe, 0xf3, 0x9d, 0xfb, 0x39, 0x63, 0xc3, 0xbb, 0xa9, 0xc7, 0xaf, 0xae,
	0x47, 0x87, 0xe3, 0x60, 0x7e, 0xd4, 0xb5, 0x87, 0x26, 0xe3, 0x36, 0x1b, 0x1f, 0xf9, 0x8c, 0xc7,
	0x6c, 0x7c, 0x10, 0x46, 0x01, 0x0f, 0x46, 0xd7, 0x97, 0xf1, 0x91, 0xfc, 0x1a, 0x07, 0xb3, 0xa3,
	0xd1, 0x34, 0x14, 0x3f, 0x87, 0x12, 0x40, 0x85, 0xd1, 0x34, 0x6c, 0xbd, 0xfd, 0x36, 0x17, 0xe3,
	0x60, 0x3e, 0x0f, 0xfc, 0xf4, 0x57, 0x62, 0xdf, 0x7e, 0x0f, 0xd0, 0x8f, 0x78, 0x9f, 0xc5, 0xb1,
	0x3b, 0x65, 0xe8, 0x9f, 0x50, 0xba, 0x62, 0xee, 0x84, 0x45, 0x6a, 0x6e, 0x2f, 0xb7, 0x5f, 0x3b,
	0x6e, 0x1e, 0x8a, 0x48, 0xfd, 0x88, 0x9f, 0x4b, 0x94, 0xa4, 0x5a, 0xb4, 0x07, 0xc5, 0x51, 0x30,
	0xb9, 0x55, 0xf3, 0x92, 0x55, 0xcf, 0x58, 0x9d, 0x60, 0x72, 0x4b, 0xa4, 0xa6, 0xed, 0x41, 0x75,
	0x61, 0x86, 0x9e, 0x40, 0x95, 0x7b, 0x73, 0x16, 0x73, 0x77, 0x1e, 0x4a, 0xcf, 0x0d, 0xb2, 0x04,
	0x10, 0x82, 0x22, 0xbf, 0x0d, 0x99, 0x74, 0xd6, 0x20, 0xf2, 0x1b, 0xa9, 0x50, 0x8e, 0xaf, 0x47,
	0x12, 0x2e, 0x48, 0x38, 0x13, 0x91, 0x02, 0x85, 0x19, 0xf3, 0xd5, 0xa2, 0x44, 0xc5, 0x67, 0xfb,
	0x47, 0x28, 0xa7, 0xb1, 0xd1, 0x1b, 0xa8, 0x77, 0x0c, 0xeb, 0xa4, 0x6f, 0x9d, 0xaf, 0x56, 0xb1,
	0x23, 0xf3, 0x5b, 0x55, 0x90, 0x35, 0x1a, 0x7a, 0x06, 0xd0, 0x31, 0xac, 0xb4, 0x09, 0x32, 0x8f,
	0x3a, 0x59, 0x41, 0x50, 0x0b, 0x0a, 0x91, 0x37, 0x92, 0x99, 0xd4, 0x8e, 0x2b, 0xd2, 0x1b, 0xc1,
	0x1d, 0x22, 0xc0, 0xf6, 0x08, 0x0a, 0x04, 0x77, 0xd0, 0x4b, 0xa8, 0x86, 0x8c, 0x45, 0xba, 0xcf,
	0xa3, 0x5b, 0x35, 0xb7, 0x57, 0x58, 0x34, 0xcf, 0xca, 0x50, 0xb2, 0x24, 0xa0, 0x03, 0x80, 0x28,
	0xb8, 0xe6, 0x2c, 0xa1, 0xe7, 0x25, 0xbd, 0x91, 0xf9, 0x4d, 0xd8, 0x2b, 0x84, 0x76, 0x08, 0xd5,
	0x85, 0x1b, 0xf4, 0x0a, 0xca, 0xc2, 0x11, 0xc5, 0x56, 0x5a, 0x9e, 0x7a, 0x98, 0x4e, 0x14, 0x5b,
	0xda, 0x64, 0x12, 0xb1, 0x38, 0xfe, 0x10, 0xb9, 0x61, 0x28, 0xc6, 0x25, 0x88, 0xd8, 0x42, 0xbb,
	0xa9, 0x89, 0x1b, 0xa7, 0x4d, 0x96, 0x0a, 0x2d, 0x5e, 0x28, 0xbc, 0x49, 0xda, 0xe6, 0xc4, 0x62,
	0xd2, 0xfe, 0x35, 0x07, 0x95, 0x2c, 0x15, 0x74, 0x00, 0xa5, 0x30, 0x62, 0x97, 0xde, 0x4d, 0x1a,
	0xf0, 0x41, 0x16, 0xd0, 0x92, 0xe8, 0x32, 0x9a, 0x14, 0xd7, 0xa7, 0x9d, 0xdf, 0x9c, 0xf6, 0x53,
	0x80, 0x24, 0xa4, 0x3f, 0x61, 0x37, 0x69, 0x54, 0xd9, 0x19, 0x2c, 0x00, 0x74, 0x04, 0x5b, 0x2e,
	0xe7, 0x51, 0x2c, 0x07, 0x5c, 0x3b, 0x7e, 0x94, 0x8d, 0x6e, 0x18, 0x4e, 0x5c, 0xce, 0x0e, 0x35,
	0xce, 0x23, 0x6f, 0x74, 0xcd, 0x59, 0x4c, 0x12, 0x5e, 0xfb, 0xe7, 0xfc, 0xfa, 0xcc, 0x57, 0x8b,
	0xcd, 0xad, 0x15, 0xfb, 0x08, 0x2a, 0xb3, 0x60, 0xec, 0xce, 0x96, 0x6d, 0x28, 0x4b, 0x59, 0x8b,
	0xd1, 0xbf, 0x60, 0xdb, 0xf3, 0x39, 0x8b, 0x2e, 0xdd, 0x31, 0x5b, 0xcb, 0xac, 0xb9, 0x80, 0x93,
	0xf4, 0xfe, 0x01, 0x4d, 0x37, 0xe9, 0x31, 0xbd, 0x74, 0xe7, 0xde, 0xec, 0x36, 0x5d, 0xc4, 0x46,
	0x8a, 0x9e, 0x49, 0x70, 0x75, 0x46, 0x5b, 0xdf, 0x38, 0xa3, 0xd7, 0x59, 0x76, 0xd8, 0x52, 0x4b,
	0x7f, 0x62, 0x93, 0xe4, 0x8d, 0x2d, 0xf4, 0x00, 0x4a, 0x5e, 0x4c, 0xdd, 0xf8, 0x44, 0x2d, 0xef,
	0xe5, 0xf6, 0x2b, 0x64, 0xcb, 0x8b, 0xb5, 0xf8, 0xa4, 0x3d, 0x80, 0x6a, 0xc7, 0xc8, 0xfa, 0xf1,
	0x10, 0x4a, 0x73, 0x37, 0xfa, 0x21, 0xbd, 0x86, 0x3a, 0x49, 0x25, 0x81, 0xcf, 0x98, 0x3f, 0xe5,
	0x57, 0xd9, 0x4e, 0x24, 0xd2, 0xe2, 0x1c, 0x0b, 0xcb, 0x73, 0x6c, 0xff, 0xd2, 0x94, 0x1e, 0x93,
	0x21, 0xa0, 0x1e, 0xec, 0xb8, 0x93, 0x4f, 0x2c, 0xe2, 0x5e, 0xcc, 0x26, 0x54, 0xee, 0x69, 0x9c,
	0xae, 0xc6, 0xf3, 0xcd, 0x79, 0x2d, 0x78, 0x44, 0xd2, 0x88, 0xe2, 0x6e, 0x20, 0x08, 0x83, 0xf2,
	0xd9, 0xe3, 0x57, 0x93, 0xc8, 0xfd, 0xec, 0x67, 0xce, 0x92, 0x77, 0xe5, 0xd9, 0x86, 0xb3, 0x0f,
	0x19, 0x2d, 0xf5, 0xb5, 0xfd, 0x79, 0x1d, 0x58, 0x2e, 0x4f, 0xe1, 0xdb, 0x96, 0xa7, 0xf5, 0x7f,
	0x68, 0x68, 0xb6, 0xe5, 0xf2, 0x2b, 0x9b, 0x4d, 0xe7, 0xcc, 0xe7, 0xa2, 0xa1, 0x6e, 0x4c, 0x63,
	0xc6, 0xe5, 0x0d, 0x37, 0xc8, 0x96, 0x1b, 0xdb, 0x6c, 0x09, 0x7f, 0x94, 0xb7, 0x9a, 0xc2, 0x1f,
	0x5b, 0x3a, 0x28, 0x9b, 0x05, 0xa2, 0x57, 0x50, 0x49, 0xee, 0x40, 0xf6, 0xa4, 0x70, 0xf7, 0xb9,
	0x2c, 0x68, 0xad, 0x33, 0x00, 0x6d, 0x3a, 0x8d, 0xd8, 0xd4, 0xe5, 0x41, 0x84, 0x9a, 0x90, 0x5f,
	0xac, 0x6e, 0xde, 0x8d, 0xd1, 0x3e, 0xe4, 0xb1, 0x95, 0x76, 0xe4, 0xee, 0x95, 0xc8, 0x63, 0xab,
	0x75, 0x01, 0xd5, 0x6e, 0x30, 0x9f, 0x5f, 0xfb, 0x1e, 0xbf, 0x15, 0x57, 0x38, 0xce, 0x84, 0x74,
	0xf2, 0x4b, 0x00, 0x1d, 0x00, 0x62, 0x37, 0x9c, 0xf9, 0x13, 0x36, 0xa1, 0x4b, 0x5a, 0xf2, 0xf2,
	0xed, 0x64, 0x9a, 0x85, 0xb3, 0x16, 0x86, 0x5a, 0x26, 0x78, 0x2c, 0x46, 0xff, 0x83, 0xda, 0x78,
	0x29, 0xa6, 0x65, 0xaa, 0x1b, 0xdd, 0x5e, 0x58, 0x93, 0x55, 0x72, 0xeb, 0x4b, 0x15, 0x60, 0x39,
	0x08, 0xf4, 0x02, 0xea, 0x41, 0xc8, 0xbd, 0xc0, 0x77, 0x67, 0x74, 0xe4, 0x71, 0x99, 0x69, 0x85,
	0xd4, 0x32, 0xac, 0xe3, 0x71, 0x71, 0x73, 0x3c, 0x72, 0xfd, 0xd8, 0xe3, 0xde, 0x27, 0x26, 0x49,
	0x79, 0x49, 0x6a, 0x2c, 0x51, 0x41, 0x7b, 0x0e, 0xb5, 0xd0, 0x8d, 0xb8, 0x97, 0x3a, 0x2a, 0x48,
	0x0e, 0xa4, 0x90, 0x20, 0xbc, 0x80, 0xfa, 0xa2, 0x66, 0xc1, 0x28, 0x26, 0xa1, 0x32, 0x4c, 0x50,
	0xfe, 0x0b, 0xa5, 0x20, 0xf2, 0xa6, 0x9e, 0x2f, 0xcf, 0xb6, 0x79, 0xbc, 0x77, 0xe7, 0x06, 0x1d,
	0x0e, 0x24, 0x8f, 0xa4, 0x7c, 0xf4, 0x06, 0xca, 0x6e, 0x4c, 0x43, 0x97, 0x5f, 0xa9, 0x25, 0xd9,
	0x8e, 0x27, 0x9b, 0xa6, 0xab, 0x7b, 0x46, 0x4a, 0x6e, 0x2c, 0x44, 0x71, 0xf5, 0x3e, 0xbb, 0xe1,
	0xf4, 0x2a, 0x08, 0xe5, 0x09, 0xff, 0xe1, 0xd5, 0x0b, 0xe6, 0x79, 0x20, 0x9f, 0xd0, 0xf9, 0xf5,
	0x8c, 0x7b, 0x94, 0xdd, 0x78, 0x5c, 0xad, 0x24, 0x4f, 0xa8, 0x44, 0xf4, 0x1b, 0x8f, 0x0b, 0x75,
	0xf2, 0x92, 0x88, 0x05, 0x53, 0xab, 0x89, 0x5a, 0x22, 0x62, 0x01, 0xd1, 0x5b, 0x00, 0x77, 0xb1,
	0x6d, 0x2a, 0xfc, 0xfe, 0xa5, 0x2c, 0x08, 0x64, 0x85, 0x8c, 0xde, 0xad, 0xcf, 0xbd, 0x26, 0x6d,
	0x5b, 0x77, 0xcc, 0xdd, 0x63, 0xf1, 0xda, 0xe4, 0xd1, 0xbf, 0x41, 0x71, 0x79, 0x30, 0xf7, 0xc6,
	0x34, 0x73, 0xc9, 0xd4, 0xba, 0x9c, 0xc1, 0x76, 0x82, 0x67, 0x51, 0x19, 0x3a, 0x81, 0x2d, 0xf1,
	0xee, 0xc4, 0x6a, 0x63, 0xaf, 0xb0, 0xdf, 0xfc, 0xea, 0x21, 0x58, 0x19, 0x83, 0x73, 0x1b, 0x32,
	0x92, 0x90, 0xdb, 0x5f, 0x8a, 0x50, 0x14, 0x32, 0xaa, 0x41, 0x79, 0x68, 0x7e, 0x67, 0x0e, 0x3e,
	0x98, 0xca, 0x3d, 0x04, 0x50, 0x1a, 0x10, 0x6c, 0x60, 0x53, 0xc9, 0x09, 0x85, 0x66, 0x53, 0x4b,
	0x73, 0xce, 0x95, 0x3c, 0xaa, 0x43, 0xc5, 0xd4, 0x2f, 0x1c, 0x7a, 0x3e, 0xb0, 0x94, 0x02, 0x6a,
	0x02, 0xf4, 0x87, 0x3d, 0x07, 0x53, 0xfd, 0x02, 0x3b, 0x4a, 0x51, 0xc8, 0xbd, 0x41, 0x57, 0xeb,
	0x51, 0x8b, 0xe8, 0x67, 0xca, 0x16, 0xfa, 0x1b, 0x28, 0x9a, 0x33, 0xe8, 0xe3, 0x2e, 0xd5, 0x0c,
	0x83, 0xe8, 0x86, 0xe6, 0xe8, 0x4a, 0x49, 0xb0, 0x32, 0x71, 0x40, 0x94, 0x32, 0x6a, 0x40, 0xb5,
	0x3b, 0xe8, 0xf7, 0x87, 0x26, 0x76, 0xbe, 0x57, 0x2a, 0x68, 0x07, 0x1a, 0x49, 0x6c, 0xa1, 0xa6,
	0xf8, 0x54, 0xa9, 0x22, 0x05, 0xea, 0xdd, 0xde, 0xd0, 0x76, 0x74, 0x42, 0x7b, 0xd8, 0x76, 0x14,
	0x10, 0xa4, 0xbe, 0x45, 0x89, 0xae, 0x75, 0xcf, 0xa9, 0xd9, 0x23, 0x58, 0x69, 0xa2, 0xfb, 0xb0,
	0xdd, 0xb7, 0xe8, 0xd0, 0x5c, 0x01, 0xb7, 0xd1, 0x43, 0x40, 0xfa, 0x85, 0xa3, 0x9b, 0xa7, 0xfa,
	0x29, 0x5d, 0x06, 0x51, 0x44, 0x1d, 0x9a, 0x7d, 0x92, 0x54, 0xb5, 0x83, 0x10, 0x34, 0x85, 0xb4,
	0x92, 0x15, 0x42, 0xdb, 0x50, 0xb3, 0xfa, 0x36, 0xa6, 0xce, 0xd0, 0x34, 0xf5, 0x9e, 0xf2, 0x10,
	0xb5, 0xe1, 0x59, 0xf2, 0x4d, 0x75, 0xb3, 0xab, 0x59, 0xf6, 0xb0, 0xa7, 0x39, 0x78, 0x60, 0x52,
	0xcd, 0x71, 0x08, 0xee, 0x0c, 0x1d, 0x5d, 0xd9, 0x45, 0xbb, 0x70, 0xdf, 0x21, 0xda, 0xd9, 0x19,
	0xee, 0x52, 0xdd, 0x34, 0xb0, 0xa9, 0xeb, 0x04, 0x9b, 0x86, 0xa2, 0xa2, 0x97, 0xb0, 0x8f, 0xad,
	0xf7, 0xff, 0xa1, 0xda, 0xe9, 0x29, 0xd1, 0x6d, 0x9b, 0xda, 0x96, 0xde, 0xc5, 0x92, 0xf6, 0x75,
	0x76, 0x8f, 0x50, 0x05, 0x8a, 0x1a, 0x36, 0x2c, 0xa5, 0x85, 0x1e, 0xc3, 0xae, 0xa5, 0xd3, 0x53,
	0x6c, 0x3b, 0xd8, 0x34, 0x86, 0xd8, 0x3e, 0x17, 0x2d, 0xd0, 0x3a, 0x7a, 0xcf, 0x56, 0x1e, 0x8b,
	0xf6, 0x76, 0x0c, 0x8b, 0xf6, 0xec, 0x95, 0x1c, 0x9e, 0x8a, 0x3e, 0xf4, 0x34, 0x62, 0xe8, 0x2b,
	0x1e, 0xf7, 0x44, 0x35, 0x1d, 0xc3, 0xb2, 0xf5, 0x6e, 0x52, 0xf2, 0x0b, 0xd4, 0x80, 0x8a, 0x30,
	0xa2, 0xb6, 0xee, 0x28, 0x3f, 0xe5, 0xda, 0x7f, 0x87, 0x52, 0x72, 0x9c, 0xa8, 0x0c, 0x05, 0x11,
	0xfa, 0x9e, 0xf8, 0xd0, 0x0d, 0x4b, 0xc9, 0x49, 0xc4, 0xec, 0x2a, 0xf9, 0xd6, 0x29, 0x6c, 0x6f,
	0xfc, 0x39, 0xf9, 0x0b, 0x2f, 0xf7, 0xa8, 0x24, 0xff, 0x89, 0x7e, 0xfd, 0x5b, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xa8, 0x83, 0xc4, 0xb0, 0xc4, 0x0b, 0x00, 0x00,
}
