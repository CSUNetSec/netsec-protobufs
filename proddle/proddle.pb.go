// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/CSUNetSec/netsec-protobufs/proddle/proddle.proto

package proddle

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// probe messages
type Protocol int32

const (
	Protocol_DNS        Protocol = 0
	Protocol_HTTP       Protocol = 1
	Protocol_HTTPS      Protocol = 2
	Protocol_PING       Protocol = 3
	Protocol_TRACEROUTE Protocol = 4
)

var Protocol_name = map[int32]string{
	0: "DNS",
	1: "HTTP",
	2: "HTTPS",
	3: "PING",
	4: "TRACEROUTE",
}
var Protocol_value = map[string]int32{
	"DNS":        0,
	"HTTP":       1,
	"HTTPS":      2,
	"PING":       3,
	"TRACEROUTE": 4,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{0}
}

type Probe struct {
	ProbeId                  uint64   `protobuf:"varint,1,opt,name=probe_id,json=probeId,proto3" json:"probe_id,omitempty"`
	ProbeIntervalSeconds     uint32   `protobuf:"varint,2,opt,name=probe_interval_seconds,json=probeIntervalSeconds,proto3" json:"probe_interval_seconds,omitempty"`
	TimeoutSeconds           uint32   `protobuf:"varint,3,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	AttemptsToDeclareFailure uint32   `protobuf:"varint,4,opt,name=attempts_to_declare_failure,json=attemptsToDeclareFailure,proto3" json:"attempts_to_declare_failure,omitempty"`
	Protocol                 Protocol `protobuf:"varint,5,opt,name=protocol,proto3,enum=proddle.Protocol" json:"protocol,omitempty"`
	Domain                   string   `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain,omitempty"`
	// HTTP/HTTPS specific
	Port                 uint32   `protobuf:"varint,7,opt,name=port,proto3" json:"port,omitempty"`
	UrlSuffix            string   `protobuf:"bytes,8,opt,name=url_suffix,json=urlSuffix,proto3" json:"url_suffix,omitempty"`
	FollowRedirect       bool     `protobuf:"varint,9,opt,name=follow_redirect,json=followRedirect,proto3" json:"follow_redirect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Probe) Reset()         { *m = Probe{} }
func (m *Probe) String() string { return proto.CompactTextString(m) }
func (*Probe) ProtoMessage()    {}
func (*Probe) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{0}
}
func (m *Probe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Probe.Unmarshal(m, b)
}
func (m *Probe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Probe.Marshal(b, m, deterministic)
}
func (dst *Probe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Probe.Merge(dst, src)
}
func (m *Probe) XXX_Size() int {
	return xxx_messageInfo_Probe.Size(m)
}
func (m *Probe) XXX_DiscardUnknown() {
	xxx_messageInfo_Probe.DiscardUnknown(m)
}

var xxx_messageInfo_Probe proto.InternalMessageInfo

func (m *Probe) GetProbeId() uint64 {
	if m != nil {
		return m.ProbeId
	}
	return 0
}

func (m *Probe) GetProbeIntervalSeconds() uint32 {
	if m != nil {
		return m.ProbeIntervalSeconds
	}
	return 0
}

func (m *Probe) GetTimeoutSeconds() uint32 {
	if m != nil {
		return m.TimeoutSeconds
	}
	return 0
}

func (m *Probe) GetAttemptsToDeclareFailure() uint32 {
	if m != nil {
		return m.AttemptsToDeclareFailure
	}
	return 0
}

func (m *Probe) GetProtocol() Protocol {
	if m != nil {
		return m.Protocol
	}
	return Protocol_DNS
}

func (m *Probe) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Probe) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Probe) GetUrlSuffix() string {
	if m != nil {
		return m.UrlSuffix
	}
	return ""
}

func (m *Probe) GetFollowRedirect() bool {
	if m != nil {
		return m.FollowRedirect
	}
	return false
}

type ProbeResult struct {
	ProbeId                        uint64   `protobuf:"varint,1,opt,name=probe_id,json=probeId,proto3" json:"probe_id,omitempty"`
	ProberHostname                 string   `protobuf:"bytes,2,opt,name=prober_hostname,json=proberHostname,proto3" json:"prober_hostname,omitempty"`
	Protocol                       Protocol `protobuf:"varint,3,opt,name=protocol,proto3,enum=proddle.Protocol" json:"protocol,omitempty"`
	TimestampSec                   uint64   `protobuf:"varint,4,opt,name=timestamp_sec,json=timestampSec,proto3" json:"timestamp_sec,omitempty"`
	Success                        bool     `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage                   string   `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ApplicationLayerLatencyNanosec uint64   `protobuf:"varint,7,opt,name=application_layer_latency_nanosec,json=applicationLayerLatencyNanosec,proto3" json:"application_layer_latency_nanosec,omitempty"`
	// DNS specific
	DnsAnswer [][]byte `protobuf:"bytes,8,rep,name=dns_answer,json=dnsAnswer,proto3" json:"dns_answer,omitempty"`
	// HTTP/HTTPS specific
	HttpStatusCode           uint32   `protobuf:"varint,9,opt,name=http_status_code,json=httpStatusCode,proto3" json:"http_status_code,omitempty"`
	HttpStatusMessage        string   `protobuf:"bytes,10,opt,name=http_status_message,json=httpStatusMessage,proto3" json:"http_status_message,omitempty"`
	ApplicationBytesReceived uint32   `protobuf:"varint,11,opt,name=application_bytes_received,json=applicationBytesReceived,proto3" json:"application_bytes_received,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *ProbeResult) Reset()         { *m = ProbeResult{} }
func (m *ProbeResult) String() string { return proto.CompactTextString(m) }
func (*ProbeResult) ProtoMessage()    {}
func (*ProbeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{1}
}
func (m *ProbeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeResult.Unmarshal(m, b)
}
func (m *ProbeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeResult.Marshal(b, m, deterministic)
}
func (dst *ProbeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeResult.Merge(dst, src)
}
func (m *ProbeResult) XXX_Size() int {
	return xxx_messageInfo_ProbeResult.Size(m)
}
func (m *ProbeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeResult.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeResult proto.InternalMessageInfo

func (m *ProbeResult) GetProbeId() uint64 {
	if m != nil {
		return m.ProbeId
	}
	return 0
}

func (m *ProbeResult) GetProberHostname() string {
	if m != nil {
		return m.ProberHostname
	}
	return ""
}

func (m *ProbeResult) GetProtocol() Protocol {
	if m != nil {
		return m.Protocol
	}
	return Protocol_DNS
}

func (m *ProbeResult) GetTimestampSec() uint64 {
	if m != nil {
		return m.TimestampSec
	}
	return 0
}

func (m *ProbeResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ProbeResult) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *ProbeResult) GetApplicationLayerLatencyNanosec() uint64 {
	if m != nil {
		return m.ApplicationLayerLatencyNanosec
	}
	return 0
}

func (m *ProbeResult) GetDnsAnswer() [][]byte {
	if m != nil {
		return m.DnsAnswer
	}
	return nil
}

func (m *ProbeResult) GetHttpStatusCode() uint32 {
	if m != nil {
		return m.HttpStatusCode
	}
	return 0
}

func (m *ProbeResult) GetHttpStatusMessage() string {
	if m != nil {
		return m.HttpStatusMessage
	}
	return ""
}

func (m *ProbeResult) GetApplicationBytesReceived() uint32 {
	if m != nil {
		return m.ApplicationBytesReceived
	}
	return 0
}

type CancelProbeRequest struct {
	Domain   string     `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Protocol []Protocol `protobuf:"varint,2,rep,packed,name=protocol,proto3,enum=proddle.Protocol" json:"protocol,omitempty"`
	// HTTP specific
	UrlSuffix            string   `protobuf:"bytes,3,opt,name=url_suffix,json=urlSuffix,proto3" json:"url_suffix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelProbeRequest) Reset()         { *m = CancelProbeRequest{} }
func (m *CancelProbeRequest) String() string { return proto.CompactTextString(m) }
func (*CancelProbeRequest) ProtoMessage()    {}
func (*CancelProbeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{2}
}
func (m *CancelProbeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelProbeRequest.Unmarshal(m, b)
}
func (m *CancelProbeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelProbeRequest.Marshal(b, m, deterministic)
}
func (dst *CancelProbeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelProbeRequest.Merge(dst, src)
}
func (m *CancelProbeRequest) XXX_Size() int {
	return xxx_messageInfo_CancelProbeRequest.Size(m)
}
func (m *CancelProbeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelProbeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelProbeRequest proto.InternalMessageInfo

func (m *CancelProbeRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CancelProbeRequest) GetProtocol() []Protocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *CancelProbeRequest) GetUrlSuffix() string {
	if m != nil {
		return m.UrlSuffix
	}
	return ""
}

type CancelProbeReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelProbeReply) Reset()         { *m = CancelProbeReply{} }
func (m *CancelProbeReply) String() string { return proto.CompactTextString(m) }
func (*CancelProbeReply) ProtoMessage()    {}
func (*CancelProbeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{3}
}
func (m *CancelProbeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelProbeReply.Unmarshal(m, b)
}
func (m *CancelProbeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelProbeReply.Marshal(b, m, deterministic)
}
func (dst *CancelProbeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelProbeReply.Merge(dst, src)
}
func (m *CancelProbeReply) XXX_Size() int {
	return xxx_messageInfo_CancelProbeReply.Size(m)
}
func (m *CancelProbeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelProbeReply.DiscardUnknown(m)
}

var xxx_messageInfo_CancelProbeReply proto.InternalMessageInfo

type SearchRequest struct {
	Protocol             []Protocol `protobuf:"varint,1,rep,packed,name=protocol,proto3,enum=proddle.Protocol" json:"protocol,omitempty"`
	Domain               string     `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{4}
}
func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (dst *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(dst, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetProtocol() []Protocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *SearchRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type SearchReply struct {
	Probe                []*Probe `protobuf:"bytes,1,rep,name=probe,proto3" json:"probe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchReply) Reset()         { *m = SearchReply{} }
func (m *SearchReply) String() string { return proto.CompactTextString(m) }
func (*SearchReply) ProtoMessage()    {}
func (*SearchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{5}
}
func (m *SearchReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReply.Unmarshal(m, b)
}
func (m *SearchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReply.Marshal(b, m, deterministic)
}
func (dst *SearchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReply.Merge(dst, src)
}
func (m *SearchReply) XXX_Size() int {
	return xxx_messageInfo_SearchReply.Size(m)
}
func (m *SearchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReply.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReply proto.InternalMessageInfo

func (m *SearchReply) GetProbe() []*Probe {
	if m != nil {
		return m.Probe
	}
	return nil
}

type ScheduleProbeRequest struct {
	Probe                []*Probe `protobuf:"bytes,2,rep,name=probe,proto3" json:"probe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScheduleProbeRequest) Reset()         { *m = ScheduleProbeRequest{} }
func (m *ScheduleProbeRequest) String() string { return proto.CompactTextString(m) }
func (*ScheduleProbeRequest) ProtoMessage()    {}
func (*ScheduleProbeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{6}
}
func (m *ScheduleProbeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleProbeRequest.Unmarshal(m, b)
}
func (m *ScheduleProbeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleProbeRequest.Marshal(b, m, deterministic)
}
func (dst *ScheduleProbeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleProbeRequest.Merge(dst, src)
}
func (m *ScheduleProbeRequest) XXX_Size() int {
	return xxx_messageInfo_ScheduleProbeRequest.Size(m)
}
func (m *ScheduleProbeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleProbeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleProbeRequest proto.InternalMessageInfo

func (m *ScheduleProbeRequest) GetProbe() []*Probe {
	if m != nil {
		return m.Probe
	}
	return nil
}

type ScheduleProbeReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScheduleProbeReply) Reset()         { *m = ScheduleProbeReply{} }
func (m *ScheduleProbeReply) String() string { return proto.CompactTextString(m) }
func (*ScheduleProbeReply) ProtoMessage()    {}
func (*ScheduleProbeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{7}
}
func (m *ScheduleProbeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleProbeReply.Unmarshal(m, b)
}
func (m *ScheduleProbeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleProbeReply.Marshal(b, m, deterministic)
}
func (dst *ScheduleProbeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleProbeReply.Merge(dst, src)
}
func (m *ScheduleProbeReply) XXX_Size() int {
	return xxx_messageInfo_ScheduleProbeReply.Size(m)
}
func (m *ScheduleProbeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleProbeReply.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleProbeReply proto.InternalMessageInfo

type BucketHash struct {
	BucketKey            uint64   `protobuf:"varint,1,opt,name=bucket_key,json=bucketKey,proto3" json:"bucket_key,omitempty"`
	Hash                 uint64   `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketHash) Reset()         { *m = BucketHash{} }
func (m *BucketHash) String() string { return proto.CompactTextString(m) }
func (*BucketHash) ProtoMessage()    {}
func (*BucketHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{8}
}
func (m *BucketHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketHash.Unmarshal(m, b)
}
func (m *BucketHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketHash.Marshal(b, m, deterministic)
}
func (dst *BucketHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketHash.Merge(dst, src)
}
func (m *BucketHash) XXX_Size() int {
	return xxx_messageInfo_BucketHash.Size(m)
}
func (m *BucketHash) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketHash.DiscardUnknown(m)
}

var xxx_messageInfo_BucketHash proto.InternalMessageInfo

func (m *BucketHash) GetBucketKey() uint64 {
	if m != nil {
		return m.BucketKey
	}
	return 0
}

func (m *BucketHash) GetHash() uint64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type BucketProbes struct {
	BucketKey            uint64   `protobuf:"varint,1,opt,name=bucket_key,json=bucketKey,proto3" json:"bucket_key,omitempty"`
	Probe                []*Probe `protobuf:"bytes,2,rep,name=probe,proto3" json:"probe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketProbes) Reset()         { *m = BucketProbes{} }
func (m *BucketProbes) String() string { return proto.CompactTextString(m) }
func (*BucketProbes) ProtoMessage()    {}
func (*BucketProbes) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{9}
}
func (m *BucketProbes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketProbes.Unmarshal(m, b)
}
func (m *BucketProbes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketProbes.Marshal(b, m, deterministic)
}
func (dst *BucketProbes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketProbes.Merge(dst, src)
}
func (m *BucketProbes) XXX_Size() int {
	return xxx_messageInfo_BucketProbes.Size(m)
}
func (m *BucketProbes) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketProbes.DiscardUnknown(m)
}

var xxx_messageInfo_BucketProbes proto.InternalMessageInfo

func (m *BucketProbes) GetBucketKey() uint64 {
	if m != nil {
		return m.BucketKey
	}
	return 0
}

func (m *BucketProbes) GetProbe() []*Probe {
	if m != nil {
		return m.Probe
	}
	return nil
}

type GetProbesRequest struct {
	BucketHash           []*BucketHash `protobuf:"bytes,1,rep,name=bucket_hash,json=bucketHash,proto3" json:"bucket_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetProbesRequest) Reset()         { *m = GetProbesRequest{} }
func (m *GetProbesRequest) String() string { return proto.CompactTextString(m) }
func (*GetProbesRequest) ProtoMessage()    {}
func (*GetProbesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{10}
}
func (m *GetProbesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProbesRequest.Unmarshal(m, b)
}
func (m *GetProbesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProbesRequest.Marshal(b, m, deterministic)
}
func (dst *GetProbesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProbesRequest.Merge(dst, src)
}
func (m *GetProbesRequest) XXX_Size() int {
	return xxx_messageInfo_GetProbesRequest.Size(m)
}
func (m *GetProbesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProbesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProbesRequest proto.InternalMessageInfo

func (m *GetProbesRequest) GetBucketHash() []*BucketHash {
	if m != nil {
		return m.BucketHash
	}
	return nil
}

type GetProbesReply struct {
	BucketProbes         []*BucketProbes `protobuf:"bytes,1,rep,name=bucket_probes,json=bucketProbes,proto3" json:"bucket_probes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetProbesReply) Reset()         { *m = GetProbesReply{} }
func (m *GetProbesReply) String() string { return proto.CompactTextString(m) }
func (*GetProbesReply) ProtoMessage()    {}
func (*GetProbesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{11}
}
func (m *GetProbesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProbesReply.Unmarshal(m, b)
}
func (m *GetProbesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProbesReply.Marshal(b, m, deterministic)
}
func (dst *GetProbesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProbesReply.Merge(dst, src)
}
func (m *GetProbesReply) XXX_Size() int {
	return xxx_messageInfo_GetProbesReply.Size(m)
}
func (m *GetProbesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProbesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetProbesReply proto.InternalMessageInfo

func (m *GetProbesReply) GetBucketProbes() []*BucketProbes {
	if m != nil {
		return m.BucketProbes
	}
	return nil
}

type GetBucketKeysRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBucketKeysRequest) Reset()         { *m = GetBucketKeysRequest{} }
func (m *GetBucketKeysRequest) String() string { return proto.CompactTextString(m) }
func (*GetBucketKeysRequest) ProtoMessage()    {}
func (*GetBucketKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{12}
}
func (m *GetBucketKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBucketKeysRequest.Unmarshal(m, b)
}
func (m *GetBucketKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBucketKeysRequest.Marshal(b, m, deterministic)
}
func (dst *GetBucketKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBucketKeysRequest.Merge(dst, src)
}
func (m *GetBucketKeysRequest) XXX_Size() int {
	return xxx_messageInfo_GetBucketKeysRequest.Size(m)
}
func (m *GetBucketKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBucketKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBucketKeysRequest proto.InternalMessageInfo

type GetBucketKeysReply struct {
	BucketKey            []uint64 `protobuf:"varint,1,rep,packed,name=bucket_key,json=bucketKey,proto3" json:"bucket_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBucketKeysReply) Reset()         { *m = GetBucketKeysReply{} }
func (m *GetBucketKeysReply) String() string { return proto.CompactTextString(m) }
func (*GetBucketKeysReply) ProtoMessage()    {}
func (*GetBucketKeysReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{13}
}
func (m *GetBucketKeysReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBucketKeysReply.Unmarshal(m, b)
}
func (m *GetBucketKeysReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBucketKeysReply.Marshal(b, m, deterministic)
}
func (dst *GetBucketKeysReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBucketKeysReply.Merge(dst, src)
}
func (m *GetBucketKeysReply) XXX_Size() int {
	return xxx_messageInfo_GetBucketKeysReply.Size(m)
}
func (m *GetBucketKeysReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBucketKeysReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBucketKeysReply proto.InternalMessageInfo

func (m *GetBucketKeysReply) GetBucketKey() []uint64 {
	if m != nil {
		return m.BucketKey
	}
	return nil
}

type SendProbeResultsRequest struct {
	ProbeResult          []*ProbeResult `protobuf:"bytes,1,rep,name=probe_result,json=probeResult,proto3" json:"probe_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SendProbeResultsRequest) Reset()         { *m = SendProbeResultsRequest{} }
func (m *SendProbeResultsRequest) String() string { return proto.CompactTextString(m) }
func (*SendProbeResultsRequest) ProtoMessage()    {}
func (*SendProbeResultsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{14}
}
func (m *SendProbeResultsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendProbeResultsRequest.Unmarshal(m, b)
}
func (m *SendProbeResultsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendProbeResultsRequest.Marshal(b, m, deterministic)
}
func (dst *SendProbeResultsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendProbeResultsRequest.Merge(dst, src)
}
func (m *SendProbeResultsRequest) XXX_Size() int {
	return xxx_messageInfo_SendProbeResultsRequest.Size(m)
}
func (m *SendProbeResultsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendProbeResultsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendProbeResultsRequest proto.InternalMessageInfo

func (m *SendProbeResultsRequest) GetProbeResult() []*ProbeResult {
	if m != nil {
		return m.ProbeResult
	}
	return nil
}

type SendProbeResultsReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendProbeResultsReply) Reset()         { *m = SendProbeResultsReply{} }
func (m *SendProbeResultsReply) String() string { return proto.CompactTextString(m) }
func (*SendProbeResultsReply) ProtoMessage()    {}
func (*SendProbeResultsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_proddle_ba0fccbcd0dd6338, []int{15}
}
func (m *SendProbeResultsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendProbeResultsReply.Unmarshal(m, b)
}
func (m *SendProbeResultsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendProbeResultsReply.Marshal(b, m, deterministic)
}
func (dst *SendProbeResultsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendProbeResultsReply.Merge(dst, src)
}
func (m *SendProbeResultsReply) XXX_Size() int {
	return xxx_messageInfo_SendProbeResultsReply.Size(m)
}
func (m *SendProbeResultsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendProbeResultsReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendProbeResultsReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Probe)(nil), "proddle.Probe")
	proto.RegisterType((*ProbeResult)(nil), "proddle.ProbeResult")
	proto.RegisterType((*CancelProbeRequest)(nil), "proddle.CancelProbeRequest")
	proto.RegisterType((*CancelProbeReply)(nil), "proddle.CancelProbeReply")
	proto.RegisterType((*SearchRequest)(nil), "proddle.SearchRequest")
	proto.RegisterType((*SearchReply)(nil), "proddle.SearchReply")
	proto.RegisterType((*ScheduleProbeRequest)(nil), "proddle.ScheduleProbeRequest")
	proto.RegisterType((*ScheduleProbeReply)(nil), "proddle.ScheduleProbeReply")
	proto.RegisterType((*BucketHash)(nil), "proddle.BucketHash")
	proto.RegisterType((*BucketProbes)(nil), "proddle.BucketProbes")
	proto.RegisterType((*GetProbesRequest)(nil), "proddle.GetProbesRequest")
	proto.RegisterType((*GetProbesReply)(nil), "proddle.GetProbesReply")
	proto.RegisterType((*GetBucketKeysRequest)(nil), "proddle.GetBucketKeysRequest")
	proto.RegisterType((*GetBucketKeysReply)(nil), "proddle.GetBucketKeysReply")
	proto.RegisterType((*SendProbeResultsRequest)(nil), "proddle.SendProbeResultsRequest")
	proto.RegisterType((*SendProbeResultsReply)(nil), "proddle.SendProbeResultsReply")
	proto.RegisterEnum("proddle.Protocol", Protocol_name, Protocol_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SchedulerClient is the client API for Scheduler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchedulerClient interface {
	CancelProbe(ctx context.Context, in *CancelProbeRequest, opts ...grpc.CallOption) (*CancelProbeReply, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchReply, error)
	ScheduleProbe(ctx context.Context, in *ScheduleProbeRequest, opts ...grpc.CallOption) (*ScheduleProbeReply, error)
}

type schedulerClient struct {
	cc *grpc.ClientConn
}

func NewSchedulerClient(cc *grpc.ClientConn) SchedulerClient {
	return &schedulerClient{cc}
}

func (c *schedulerClient) CancelProbe(ctx context.Context, in *CancelProbeRequest, opts ...grpc.CallOption) (*CancelProbeReply, error) {
	out := new(CancelProbeReply)
	err := c.cc.Invoke(ctx, "/proddle.Scheduler/CancelProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchReply, error) {
	out := new(SearchReply)
	err := c.cc.Invoke(ctx, "/proddle.Scheduler/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) ScheduleProbe(ctx context.Context, in *ScheduleProbeRequest, opts ...grpc.CallOption) (*ScheduleProbeReply, error) {
	out := new(ScheduleProbeReply)
	err := c.cc.Invoke(ctx, "/proddle.Scheduler/ScheduleProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchedulerServer is the server API for Scheduler service.
type SchedulerServer interface {
	CancelProbe(context.Context, *CancelProbeRequest) (*CancelProbeReply, error)
	Search(context.Context, *SearchRequest) (*SearchReply, error)
	ScheduleProbe(context.Context, *ScheduleProbeRequest) (*ScheduleProbeReply, error)
}

func RegisterSchedulerServer(s *grpc.Server, srv SchedulerServer) {
	s.RegisterService(&_Scheduler_serviceDesc, srv)
}

func _Scheduler_CancelProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelProbeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).CancelProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proddle.Scheduler/CancelProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).CancelProbe(ctx, req.(*CancelProbeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proddle.Scheduler/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_ScheduleProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScheduleProbeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).ScheduleProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proddle.Scheduler/ScheduleProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).ScheduleProbe(ctx, req.(*ScheduleProbeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scheduler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proddle.Scheduler",
	HandlerType: (*SchedulerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CancelProbe",
			Handler:    _Scheduler_CancelProbe_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Scheduler_Search_Handler,
		},
		{
			MethodName: "ScheduleProbe",
			Handler:    _Scheduler_ScheduleProbe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/CSUNetSec/netsec-protobufs/proddle/proddle.proto",
}

// ProbeCacheClient is the client API for ProbeCache service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProbeCacheClient interface {
	GetProbes(ctx context.Context, in *GetProbesRequest, opts ...grpc.CallOption) (*GetProbesReply, error)
	GetBucketKeys(ctx context.Context, in *GetBucketKeysRequest, opts ...grpc.CallOption) (*GetBucketKeysReply, error)
	SendProbeResults(ctx context.Context, in *SendProbeResultsRequest, opts ...grpc.CallOption) (*SendProbeResultsReply, error)
}

type probeCacheClient struct {
	cc *grpc.ClientConn
}

func NewProbeCacheClient(cc *grpc.ClientConn) ProbeCacheClient {
	return &probeCacheClient{cc}
}

func (c *probeCacheClient) GetProbes(ctx context.Context, in *GetProbesRequest, opts ...grpc.CallOption) (*GetProbesReply, error) {
	out := new(GetProbesReply)
	err := c.cc.Invoke(ctx, "/proddle.ProbeCache/GetProbes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *probeCacheClient) GetBucketKeys(ctx context.Context, in *GetBucketKeysRequest, opts ...grpc.CallOption) (*GetBucketKeysReply, error) {
	out := new(GetBucketKeysReply)
	err := c.cc.Invoke(ctx, "/proddle.ProbeCache/GetBucketKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *probeCacheClient) SendProbeResults(ctx context.Context, in *SendProbeResultsRequest, opts ...grpc.CallOption) (*SendProbeResultsReply, error) {
	out := new(SendProbeResultsReply)
	err := c.cc.Invoke(ctx, "/proddle.ProbeCache/SendProbeResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProbeCacheServer is the server API for ProbeCache service.
type ProbeCacheServer interface {
	GetProbes(context.Context, *GetProbesRequest) (*GetProbesReply, error)
	GetBucketKeys(context.Context, *GetBucketKeysRequest) (*GetBucketKeysReply, error)
	SendProbeResults(context.Context, *SendProbeResultsRequest) (*SendProbeResultsReply, error)
}

func RegisterProbeCacheServer(s *grpc.Server, srv ProbeCacheServer) {
	s.RegisterService(&_ProbeCache_serviceDesc, srv)
}

func _ProbeCache_GetProbes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProbesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProbeCacheServer).GetProbes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proddle.ProbeCache/GetProbes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProbeCacheServer).GetProbes(ctx, req.(*GetProbesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProbeCache_GetBucketKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBucketKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProbeCacheServer).GetBucketKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proddle.ProbeCache/GetBucketKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProbeCacheServer).GetBucketKeys(ctx, req.(*GetBucketKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProbeCache_SendProbeResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendProbeResultsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProbeCacheServer).SendProbeResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proddle.ProbeCache/SendProbeResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProbeCacheServer).SendProbeResults(ctx, req.(*SendProbeResultsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProbeCache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proddle.ProbeCache",
	HandlerType: (*ProbeCacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProbes",
			Handler:    _ProbeCache_GetProbes_Handler,
		},
		{
			MethodName: "GetBucketKeys",
			Handler:    _ProbeCache_GetBucketKeys_Handler,
		},
		{
			MethodName: "SendProbeResults",
			Handler:    _ProbeCache_SendProbeResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/CSUNetSec/netsec-protobufs/proddle/proddle.proto",
}

func init() {
	proto.RegisterFile("github.com/CSUNetSec/netsec-protobufs/proddle/proddle.proto", fileDescriptor_proddle_ba0fccbcd0dd6338)
}

var fileDescriptor_proddle_ba0fccbcd0dd6338 = []byte{
	// 974 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5d, 0x6f, 0xdb, 0x36,
	0x14, 0x8d, 0x6c, 0x27, 0xb6, 0xaf, 0x3f, 0xea, 0xb2, 0x6e, 0xa2, 0x3a, 0x68, 0xe1, 0x69, 0x03,
	0x6a, 0x0c, 0x68, 0x02, 0x24, 0x05, 0x36, 0x6c, 0x1d, 0x86, 0x24, 0xed, 0x92, 0x60, 0x69, 0x16,
	0x50, 0x6e, 0x5f, 0x05, 0x5a, 0xba, 0xae, 0x85, 0xca, 0xa2, 0x46, 0x52, 0xed, 0xbc, 0xff, 0xba,
	0xa7, 0x01, 0xfb, 0x09, 0x7b, 0x1e, 0x44, 0x7d, 0x58, 0x76, 0xbc, 0xa4, 0x4f, 0x22, 0xcf, 0x3d,
	0xbc, 0x1f, 0x87, 0x87, 0x82, 0x1f, 0x3f, 0xf8, 0x6a, 0x16, 0x4f, 0x0e, 0x5c, 0x3e, 0x3f, 0x3c,
	0xb3, 0xdf, 0x5d, 0xa3, 0xb2, 0xd1, 0x3d, 0x0c, 0x51, 0x49, 0x74, 0x5f, 0x44, 0x82, 0x2b, 0x3e,
	0x89, 0xa7, 0xf2, 0x30, 0x12, 0xdc, 0xf3, 0x02, 0xcc, 0xbf, 0x07, 0x3a, 0x42, 0xea, 0xd9, 0xd6,
	0xfa, 0xbb, 0x02, 0xdb, 0x37, 0x82, 0x4f, 0x90, 0x3c, 0x81, 0x46, 0x94, 0x2c, 0x1c, 0xdf, 0x33,
	0x8d, 0xa1, 0x31, 0xaa, 0xd1, 0xba, 0xde, 0x5f, 0x7a, 0xe4, 0x25, 0xec, 0x66, 0xa1, 0x50, 0xa1,
	0xf8, 0xc4, 0x02, 0x47, 0xa2, 0xcb, 0x43, 0x4f, 0x9a, 0x95, 0xa1, 0x31, 0xea, 0xd0, 0x7e, 0x4a,
	0xcc, 0x82, 0x76, 0x1a, 0x23, 0xcf, 0xe1, 0x81, 0xf2, 0xe7, 0xc8, 0x63, 0x55, 0xd0, 0xab, 0x9a,
	0xde, 0xcd, 0xe0, 0x9c, 0xf8, 0x13, 0xec, 0x33, 0xa5, 0x70, 0x1e, 0x29, 0xe9, 0x28, 0xee, 0x78,
	0xe8, 0x06, 0x4c, 0xa0, 0x33, 0x65, 0x7e, 0x10, 0x0b, 0x34, 0x6b, 0xfa, 0x90, 0x99, 0x53, 0xc6,
	0xfc, 0x75, 0x4a, 0xf8, 0x25, 0x8d, 0x93, 0x17, 0xba, 0x71, 0xc5, 0x5d, 0x1e, 0x98, 0xdb, 0x43,
	0x63, 0xd4, 0x3d, 0x7a, 0x78, 0x90, 0x4f, 0x7b, 0x93, 0x05, 0x68, 0x41, 0x21, 0xbb, 0xb0, 0xe3,
	0xf1, 0x39, 0xf3, 0x43, 0x73, 0x67, 0x68, 0x8c, 0x9a, 0x34, 0xdb, 0x11, 0x02, 0xb5, 0x88, 0x0b,
	0x65, 0xd6, 0x75, 0x39, 0xbd, 0x26, 0x4f, 0x01, 0x62, 0x11, 0x38, 0x32, 0x9e, 0x4e, 0xfd, 0x3f,
	0xcc, 0x86, 0xe6, 0x37, 0x63, 0x11, 0xd8, 0x1a, 0x48, 0x26, 0x9c, 0xf2, 0x20, 0xe0, 0x9f, 0x1d,
	0x81, 0x9e, 0x2f, 0xd0, 0x55, 0x66, 0x73, 0x68, 0x8c, 0x1a, 0xb4, 0x9b, 0xc2, 0x34, 0x43, 0xad,
	0x7f, 0xaa, 0xd0, 0xd2, 0x2a, 0x53, 0x94, 0x71, 0xa0, 0xee, 0xd2, 0xfa, 0x39, 0x3c, 0xd0, 0x4b,
	0xe1, 0xcc, 0xb8, 0x54, 0x21, 0x9b, 0xa3, 0x16, 0xb9, 0x49, 0xbb, 0x29, 0x7c, 0x91, 0xa1, 0x2b,
	0x63, 0x57, 0xef, 0x1f, 0xfb, 0x6b, 0xe8, 0x24, 0xb2, 0x4b, 0xc5, 0xe6, 0x51, 0x72, 0x1f, 0x5a,
	0xd6, 0x1a, 0x6d, 0x17, 0xa0, 0x8d, 0x2e, 0x31, 0xa1, 0x2e, 0x63, 0xd7, 0x45, 0x29, 0xb5, 0x92,
	0x0d, 0x9a, 0x6f, 0x93, 0xe3, 0x28, 0x04, 0x17, 0xce, 0x1c, 0xa5, 0x64, 0x1f, 0x30, 0x13, 0xaf,
	0xad, 0xc1, 0xb7, 0x29, 0x46, 0x2e, 0xe1, 0x2b, 0x16, 0x45, 0x81, 0xef, 0x32, 0xe5, 0xf3, 0xd0,
	0x09, 0xd8, 0x02, 0x85, 0x13, 0x30, 0x85, 0xa1, 0xbb, 0x70, 0x42, 0x16, 0xf2, 0xa4, 0x6e, 0x5d,
	0xd7, 0x7d, 0x56, 0x22, 0x5e, 0x25, 0xbc, 0xab, 0x94, 0x76, 0x9d, 0xb2, 0x12, 0xe5, 0xbd, 0x50,
	0x3a, 0x2c, 0x94, 0x9f, 0x51, 0x98, 0x8d, 0x61, 0x75, 0xd4, 0xa6, 0x4d, 0x2f, 0x94, 0x27, 0x1a,
	0x20, 0x23, 0xe8, 0xcd, 0x94, 0x8a, 0x1c, 0xa9, 0x98, 0x8a, 0xa5, 0xe3, 0x72, 0x0f, 0xb5, 0xf4,
	0x1d, 0xda, 0x4d, 0x70, 0x5b, 0xc3, 0x67, 0xdc, 0x43, 0x72, 0x00, 0x8f, 0xca, 0xcc, 0xbc, 0x7d,
	0xd0, 0xed, 0x3f, 0x5c, 0x92, 0xf3, 0x19, 0x5e, 0xc1, 0xa0, 0x3c, 0xc3, 0x64, 0xa1, 0x50, 0x3a,
	0x02, 0x5d, 0xf4, 0x3f, 0xa1, 0x67, 0xb6, 0x32, 0x2f, 0x2e, 0x19, 0xa7, 0x09, 0x81, 0x66, 0x71,
	0xeb, 0x4f, 0x20, 0x67, 0x2c, 0x74, 0x31, 0xc8, 0x6e, 0xfb, 0xf7, 0x18, 0xa5, 0x2a, 0x59, 0xce,
	0x58, 0xb1, 0x5c, 0xf9, 0x0a, 0x2b, 0xc3, 0xea, 0x7d, 0x57, 0xb8, 0xea, 0xc6, 0xea, 0x9a, 0x1b,
	0x2d, 0x02, 0xbd, 0x95, 0xda, 0x51, 0xb0, 0xb0, 0xde, 0x43, 0xc7, 0x46, 0x26, 0xdc, 0x59, 0xde,
	0x4a, 0xb9, 0xa4, 0x71, 0x7f, 0xc9, 0x65, 0xe7, 0x95, 0x72, 0xe7, 0xd6, 0x31, 0xb4, 0xf2, 0xbc,
	0x51, 0xb0, 0x20, 0xdf, 0xc0, 0xb6, 0x76, 0xa7, 0x4e, 0xd9, 0x3a, 0xea, 0x96, 0x53, 0x4e, 0x90,
	0xa6, 0x41, 0xeb, 0x15, 0xf4, 0x6d, 0x77, 0x86, 0x5e, 0x1c, 0xe0, 0x8a, 0x3c, 0xc5, 0xe9, 0xca,
	0x5d, 0xa7, 0xfb, 0x40, 0xd6, 0x4e, 0x27, 0x03, 0xfe, 0x0c, 0x70, 0x1a, 0xbb, 0x1f, 0x51, 0x5d,
	0x30, 0x39, 0x4b, 0x14, 0x9a, 0xe8, 0x9d, 0xf3, 0x11, 0x17, 0xd9, 0xcb, 0x6a, 0xa6, 0xc8, 0xaf,
	0xb8, 0x48, 0x9e, 0xf8, 0x8c, 0xc9, 0x99, 0x9e, 0xa5, 0x46, 0xf5, 0xda, 0xb2, 0xa1, 0x9d, 0x26,
	0xd0, 0x49, 0xe5, 0x7d, 0x29, 0xbe, 0xac, 0xd7, 0x0b, 0xe8, 0x9d, 0xe7, 0x19, 0xf3, 0x29, 0x5f,
	0x42, 0x2b, 0x4b, 0xac, 0x7b, 0x48, 0x95, 0x7a, 0x54, 0x9c, 0x5f, 0x4e, 0x41, 0xb3, 0x06, 0x92,
	0xb5, 0x75, 0x05, 0xdd, 0x52, 0xa6, 0x44, 0xeb, 0x1f, 0xa0, 0x93, 0xe5, 0xd1, 0xb5, 0x64, 0x96,
	0xe9, 0xf1, 0x5a, 0xa6, 0xec, 0x48, 0x7b, 0x52, 0xda, 0x59, 0xbb, 0xd0, 0x3f, 0x47, 0x75, 0x9a,
	0x4f, 0x93, 0xf7, 0x66, 0x1d, 0x03, 0x59, 0xc3, 0x93, 0x4a, 0xeb, 0x52, 0x54, 0x57, 0xa4, 0xb0,
	0x28, 0xec, 0xd9, 0x18, 0x7a, 0xa5, 0xff, 0x5a, 0x31, 0xeb, 0x77, 0xd0, 0x4e, 0xff, 0x6f, 0x42,
	0xe3, 0x59, 0x8b, 0xfd, 0x35, 0xb1, 0x74, 0x8c, 0xb6, 0xa2, 0xe5, 0xc6, 0xda, 0x83, 0xc7, 0xb7,
	0x73, 0x46, 0xc1, 0xe2, 0xdb, 0x53, 0x68, 0xe4, 0xf6, 0x24, 0x75, 0xa8, 0xbe, 0xbe, 0xb6, 0x7b,
	0x5b, 0xa4, 0x01, 0xb5, 0x8b, 0xf1, 0xf8, 0xa6, 0x67, 0x90, 0x26, 0x6c, 0x27, 0x2b, 0xbb, 0x57,
	0x49, 0xc0, 0x9b, 0xcb, 0xeb, 0xf3, 0x5e, 0x95, 0x74, 0x01, 0xc6, 0xf4, 0xe4, 0xec, 0x0d, 0xfd,
	0xed, 0xdd, 0xf8, 0x4d, 0xaf, 0x76, 0xf4, 0x97, 0x01, 0xcd, 0xdc, 0x42, 0x82, 0x9c, 0x43, 0xab,
	0xf4, 0x5c, 0xc8, 0x7e, 0xd1, 0xdc, 0xed, 0x07, 0x3c, 0x78, 0xb2, 0x39, 0x98, 0x18, 0x70, 0x8b,
	0x7c, 0x0f, 0x3b, 0xe9, 0x5b, 0x20, 0xbb, 0x05, 0x6d, 0xe5, 0xd1, 0x0d, 0xfa, 0xb7, 0xf0, 0xf4,
	0xe4, 0x5b, 0xe8, 0xac, 0x58, 0x9a, 0x3c, 0x5d, 0x12, 0x37, 0x3c, 0x94, 0xc1, 0xfe, 0xff, 0x85,
	0x75, 0xba, 0xa3, 0x7f, 0x0d, 0x00, 0x0d, 0x9c, 0x31, 0x77, 0x86, 0xe4, 0x04, 0x9a, 0x85, 0x75,
	0xc8, 0x72, 0x82, 0x75, 0x63, 0x0e, 0xf6, 0x36, 0x85, 0x8a, 0x06, 0x57, 0x7c, 0x51, 0x6a, 0x70,
	0x93, 0x8f, 0x4a, 0x0d, 0xde, 0xb6, 0x93, 0xb5, 0x45, 0xde, 0x43, 0x6f, 0xfd, 0x76, 0xc9, 0xb0,
	0xa4, 0xcd, 0x46, 0x33, 0x0d, 0x9e, 0xdd, 0xc1, 0xd0, 0x79, 0x27, 0x3b, 0xfa, 0x7f, 0x75, 0xfc,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0xdb, 0x6c, 0xe4, 0x13, 0x09, 0x00, 0x00,
}
